<project name="KBase Data Import" default="compile" basedir=".">

  <description>
      Build jar-file for genome uploader in genbank format
  </description>

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="dist" location="dist"/>
  <property name="classes" location="classes"/>
  <property name="jar.file" value="KBaseDataImport.jar"/>
  <property name="jarsdir" value="../jars/lib/jars"/>
  <property name="doc" location="docs/javadoc"/>
  <property name="tempunpack" location="unpackedjars"/>
  <property name="war.file" value="KBaseDataImport.war"/>
  <property name="war.dir" value="war"/>

  <fileset dir="${jarsdir}" id="lib">
    <include name="apache_commons/commons-codec-1.8.jar"/>
    <include name="apache_commons/commons-io-2.4.jar"/>
    <include name="jackson/jackson-annotations-2.2.3.jar"/>
    <include name="jackson/jackson-core-2.2.3.jar"/>
    <include name="jackson/jackson-databind-2.2.3.jar"/>
    <include name="google/guava-14.0.1.jar"/>
    <include name="kbase/auth/kbase-auth-0.4.4.jar"/>
    <include name="kbase/common/kbase-common-0.0.23.jar"/>
    <include name="kbase/workspace/WorkspaceClient-0.6.0.jar"/>
    <include name="servlet/servlet-api-2.5.jar"/>
    <include name="ini4j/ini4j-0.5.2.jar"/>
    <include name="apache_commons/commons-fileupload-1.2.2.jar"/>
    <include name="jetty/jetty-all-7.0.0.jar"/>
    <include name="syslog4j/syslog4j-0.9.46.jar"/>
    <include name="jna/jna-3.4.0.jar"/>
    <include name="kbase/shock/shock-client-0.1.0.jar"/>
    <include name="apache_commons/http/httpclient-4.5.2.jar"/>
    <include name="apache_commons/http/httpcore-4.4.5.jar"/>
    <include name="apache_commons/http/httpmime-4.5.8.jar"/>
    <include name="apache_commons/commons-lang3-3.1.jar"/>
    <include name="apache_commons/commons-logging-1.1.1.jar"/>
    <include name="apache_commons/commons-net-3.3.jar"/>
    <include name="joda/joda-time-2.2.jar"/>
    <include name="slf4j/slf4j-api-1.7.7.jar"/>
    <include name="logback/logback-core-1.1.2.jar"/>
    <include name="logback/logback-classic-1.1.2.jar"/>
  </fileset>

  <path id="compile.classpath">
    <fileset refid="lib"/>
  </path>

  <target name="init" description="make directories">
    <!-- Create the output directory structure-->
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="build" depends="compile,buildwar"
    description="build everything"/>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile class files-->
    <javac destdir="${classes}" includeantruntime="false" target="1.7" source="1.7" debug="true" classpathref="compile.classpath">
      <src path="${src}"/>
    </javac>
    <!-- Copy resource files-->
    <copy todir="${classes}">
      <fileset dir="${src}">
      </fileset>
    </copy>
    <jar destfile="${dist}/${jar.file}" basedir="${classes}"/>
    <delete dir="${classes}"/>
  </target>

  <target name="war" depends="compile" description="build the WAR file. Assumes compile has been run">
    <!-- make the war file for the server-->
    <mkdir dir="${war.dir}/lib"/>
    <copy todir="${war.dir}/lib/" flatten="true">
      <fileset refid="lib"/>
      <resources>
        <file file="${dist}/${jar.file}"/>
      </resources>
    </copy>
    <war destfile="${dist}/${war.file}" webxml="${war.dir}/web.xml">
      <lib dir="${war.dir}/lib/"/>
    </war>
    <delete dir="${war.dir}/lib"/>
  </target>

  <target name="buildwar" depends="compile" description="build the WAR file">
    <!-- make the war file for the server-->
    <mkdir dir="${war.dir}/lib"/>
    <copy todir="${war.dir}/lib/" flatten="true">
      <fileset refid="lib"/>
      <resources>
        <file file="${dist}/${jar.file}"/>
      </resources>
    </copy>
    <war destfile="${dist}/${war.file}" webxml="${war.dir}/web.xml">
      <lib dir="${war.dir}/lib/"/>
    </war>
    <!-- Remove uncompressed class files and libs-->
    <delete dir="${war.dir}/lib"/>
    <!-- copy war to jettybase -->
    <copy tofile="./jettybase/webapps/ROOT.war" file="${dist}/${war.file}" />
  </target>

  <target name="clean" description="clean up" >
    <!-- Clean up internal temporary files and folders-->
    <delete dir="${classes}"/>
    <delete dir="${dist}"/>
  </target>
</project>

